; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\fmc_user.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\fmc_user.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\NUC131\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\ISP_UART -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\fmc_user.crf ..\FMC_USER.c]
                          THUMB

                          AREA ||i.FMC_Erase_User||, CODE, READONLY, ALIGN=2

                  FMC_Erase_User PROC
;;;89      */
;;;90     int FMC_Erase_User(unsigned int u32Addr)
000000  4908              LDR      r1,|L1.36|
;;;91     {
;;;92         unsigned int Reg;
;;;93         FMC->ISPCMD = FMC_ISPCMD_PAGE_ERASE;
000002  2222              MOVS     r2,#0x22
000004  60ca              STR      r2,[r1,#0xc]
;;;94         FMC->ISPADR = u32Addr;
000006  6048              STR      r0,[r1,#4]
;;;95         FMC->ISPTRG = 0x1;
000008  2001              MOVS     r0,#1
00000a  6108              STR      r0,[r1,#0x10]
;;;96         __ISB();
00000c  f3bf8f6f          ISB      
;;;97         Reg = FMC->ISPCON;
000010  6808              LDR      r0,[r1,#0]
;;;98     
;;;99         if (Reg & FMC_ISPCON_ISPFF_Msk) {
000012  0642              LSLS     r2,r0,#25
000014  d503              BPL      |L1.30|
;;;100            FMC->ISPCON = Reg;
000016  6008              STR      r0,[r1,#0]
;;;101            return -1;
000018  2000              MOVS     r0,#0
00001a  43c0              MVNS     r0,r0
;;;102        }
;;;103    
;;;104        return 0;
;;;105    }
00001c  4770              BX       lr
                  |L1.30|
00001e  2000              MOVS     r0,#0                 ;104
000020  4770              BX       lr
;;;106    
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      0x5000c000

                          AREA ||i.FMC_Read_User||, CODE, READONLY, ALIGN=2

                  FMC_Read_User PROC
;;;57      */
;;;58     int FMC_Read_User(unsigned int u32Addr, unsigned int *data)
000000  4a09              LDR      r2,|L2.40|
;;;59     {
;;;60         unsigned int Reg;
;;;61         FMC->ISPCMD = FMC_ISPCMD_READ;
000002  2300              MOVS     r3,#0
000004  60d3              STR      r3,[r2,#0xc]
;;;62         FMC->ISPADR = u32Addr;
000006  6050              STR      r0,[r2,#4]
;;;63         FMC->ISPDAT = 0;
000008  6093              STR      r3,[r2,#8]
;;;64         FMC->ISPTRG = 0x1;
00000a  2001              MOVS     r0,#1
00000c  6110              STR      r0,[r2,#0x10]
;;;65         __ISB();
00000e  f3bf8f6f          ISB      
;;;66         Reg = FMC->ISPCON;
000012  6810              LDR      r0,[r2,#0]
;;;67     
;;;68         if (Reg & FMC_ISPCON_ISPFF_Msk) {
000014  0643              LSLS     r3,r0,#25
000016  d503              BPL      |L2.32|
;;;69             FMC->ISPCON = Reg;
000018  6010              STR      r0,[r2,#0]
;;;70             return -1;
00001a  2000              MOVS     r0,#0
00001c  43c0              MVNS     r0,r0
;;;71         }
;;;72     
;;;73         *data = FMC->ISPDAT;
;;;74         return 0;
;;;75     }
00001e  4770              BX       lr
                  |L2.32|
000020  6890              LDR      r0,[r2,#8]            ;73
000022  6008              STR      r0,[r1,#0]            ;74
000024  2000              MOVS     r0,#0                 ;74
000026  4770              BX       lr
;;;76     
                          ENDP

                  |L2.40|
                          DCD      0x5000c000

                          AREA ||i.FMC_Write_User||, CODE, READONLY, ALIGN=2

                  FMC_Write_User PROC
;;;25      */
;;;26     int FMC_Write_User(unsigned int u32Addr, unsigned int u32Data)
000000  4a08              LDR      r2,|L3.36|
;;;27     {
;;;28         unsigned int Reg;
;;;29         FMC->ISPCMD = FMC_ISPCMD_PROGRAM;
000002  2321              MOVS     r3,#0x21
000004  60d3              STR      r3,[r2,#0xc]
;;;30         FMC->ISPADR = u32Addr;
000006  6050              STR      r0,[r2,#4]
;;;31         FMC->ISPDAT = u32Data;
000008  6091              STR      r1,[r2,#8]
;;;32         FMC->ISPTRG = 0x1;
00000a  2001              MOVS     r0,#1
00000c  6110              STR      r0,[r2,#0x10]
;;;33         __ISB();
00000e  f3bf8f6f          ISB      
;;;34         Reg = FMC->ISPCON;
000012  6810              LDR      r0,[r2,#0]
;;;35     
;;;36         if (Reg & FMC_ISPCON_ISPFF_Msk) {
000014  0641              LSLS     r1,r0,#25
000016  d503              BPL      |L3.32|
;;;37             FMC->ISPCON = Reg;
000018  6010              STR      r0,[r2,#0]
;;;38             return -1;
00001a  2000              MOVS     r0,#0
00001c  43c0              MVNS     r0,r0
;;;39         }
;;;40     
;;;41         return 0;
;;;42     }
00001e  4770              BX       lr
                  |L3.32|
000020  2000              MOVS     r0,#0                 ;41
000022  4770              BX       lr
;;;43     
                          ENDP

                  |L3.36|
                          DCD      0x5000c000

                          AREA ||i.ReadData||, CODE, READONLY, ALIGN=1

                  ReadData PROC
;;;106    
;;;107    void ReadData(unsigned int addr_start, unsigned int addr_end, unsigned int *data)    // Read data from flash
000000  b570              PUSH     {r4-r6,lr}
;;;108    {
000002  4615              MOV      r5,r2
000004  460e              MOV      r6,r1
000006  4604              MOV      r4,r0
;;;109        unsigned int rLoop;
;;;110    
;;;111        for (rLoop = addr_start; rLoop < addr_end; rLoop += 4) {
000008  e005              B        |L4.22|
                  |L4.10|
;;;112            FMC_Read_User(rLoop, data);
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       FMC_Read_User
000012  1d24              ADDS     r4,r4,#4
000014  1d2d              ADDS     r5,r5,#4
                  |L4.22|
000016  42b4              CMP      r4,r6                 ;111
000018  d3f7              BCC      |L4.10|
;;;113            data++;
;;;114        }
;;;115    
;;;116        return;
;;;117    }
00001a  bd70              POP      {r4-r6,pc}
;;;118    
                          ENDP


                          AREA ||i.WriteData||, CODE, READONLY, ALIGN=1

                  WriteData PROC
;;;118    
;;;119    void WriteData(unsigned int addr_start, unsigned int addr_end, unsigned int *data)  // Write data into flash
000000  b570              PUSH     {r4-r6,lr}
;;;120    {
000002  4615              MOV      r5,r2
000004  460e              MOV      r6,r1
000006  4604              MOV      r4,r0
;;;121        unsigned int wLoop;
;;;122    
;;;123        for (wLoop = addr_start; wLoop < addr_end; wLoop += 4) {
000008  e005              B        |L5.22|
                  |L5.10|
;;;124            FMC_Write_User(wLoop, *data);
00000a  4620              MOV      r0,r4
00000c  6829              LDR      r1,[r5,#0]
00000e  f7fffffe          BL       FMC_Write_User
000012  1d24              ADDS     r4,r4,#4
000014  1d2d              ADDS     r5,r5,#4
                  |L5.22|
000016  42b4              CMP      r4,r6                 ;123
000018  d3f7              BCC      |L5.10|
;;;125            data++;
;;;126        }
;;;127    }
00001a  bd70              POP      {r4-r6,pc}
;;;128    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\FMC_USER.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_FMC_USER_c_825b21e5____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_FMC_USER_c_825b21e5____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_FMC_USER_c_825b21e5____REVSH|
#line 132
|__asm___10_FMC_USER_c_825b21e5____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
