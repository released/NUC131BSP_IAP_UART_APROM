; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\targetdev.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\targetdev.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\NUC131\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\ISP_UART -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\targetdev.crf ..\targetdev.c]
                          THUMB

                          AREA ||i.GetApromSize||, CODE, READONLY, ALIGN=1

                  GetApromSize PROC
;;;16     // Supports 32K/64K (APROM)
;;;17     uint32_t GetApromSize()
000000  b508              PUSH     {r3,lr}
;;;18     {
;;;19         uint32_t size = 0xA000, data;
000002  2005              MOVS     r0,#5
000004  0340              LSLS     r0,r0,#13
;;;20         int result;
;;;21         result = FMC_Read_User(size, &data);
000006  4669              MOV      r1,sp
000008  f7fffffe          BL       FMC_Read_User
;;;22     
;;;23         if (result < 0) {
00000c  2800              CMP      r0,#0
00000e  da02              BGE      |L1.22|
;;;24             return 32 * 1024;
000010  2001              MOVS     r0,#1
000012  03c0              LSLS     r0,r0,#15
;;;25         } else {
;;;26             return 64 * 1024;
;;;27         }
;;;28     }
000014  bd08              POP      {r3,pc}
                  |L1.22|
000016  2001              MOVS     r0,#1                 ;26
000018  0400              LSLS     r0,r0,#16             ;26
00001a  bd08              POP      {r3,pc}
;;;29     
                          ENDP


                          AREA ||i.GetDataFlashInfo||, CODE, READONLY, ALIGN=2

                  GetDataFlashInfo PROC
;;;29     
;;;30     void GetDataFlashInfo(uint32_t *addr, uint32_t *size)
000000  b5f8              PUSH     {r3-r7,lr}
;;;31     {
000002  4605              MOV      r5,r0
;;;32         uint32_t uData;
;;;33         // g_apromSize = GetApromSize();
;;;34         *size = 0;
000004  2600              MOVS     r6,#0
000006  460c              MOV      r4,r1                 ;31
;;;35         /* Note: DFVSEN = 1, DATA Flash Size is 4K bytes
;;;36                  DFVSEN = 0, DATA Flash Size is based on CONFIG1 */
;;;37         FMC_Read_User(Config0, &uData);
000008  600e              STR      r6,[r1,#0]
00000a  2003              MOVS     r0,#3
00000c  4669              MOV      r1,sp
00000e  0500              LSLS     r0,r0,#20
000010  f7fffffe          BL       FMC_Read_User
;;;38     
;;;39         if (uData & CONFIG0_DFVSEN) {
000014  9800              LDR      r0,[sp,#0]
;;;40             *addr = 0x10000;    //0x1F000;
;;;41             *size = 4096;//4K
000016  4f15              LDR      r7,|L2.108|
000018  0741              LSLS     r1,r0,#29             ;39
00001a  d503              BPL      |L2.36|
00001c  0138              LSLS     r0,r7,#4              ;40
00001e  6028              STR      r0,[r5,#0]
000020  6027              STR      r7,[r4,#0]
;;;42         } else if (uData & CONFIG0_DFEN) {
;;;43             g_apromSize += 4096;
;;;44             *addr = g_apromSize;
;;;45             *size = 0;
;;;46         } else {
;;;47             g_apromSize += 4096;
;;;48             FMC_Read_User(Config1, &uData);
;;;49             uData &= 0x000FFE00UL;
;;;50     
;;;51             if (uData > (g_apromSize + 4096)) { //avoid config1 value from error
;;;52                 uData = g_apromSize;
;;;53             }
;;;54     
;;;55             *addr = uData;
;;;56             *size = g_apromSize - uData;
;;;57             g_apromSize -= *size;
;;;58         }
;;;59     }
000022  bdf8              POP      {r3-r7,pc}
                  |L2.36|
000024  4912              LDR      r1,|L2.112|
000026  07c0              LSLS     r0,r0,#31             ;42
000028  d005              BEQ      |L2.54|
00002a  6808              LDR      r0,[r1,#0]            ;43  ; g_apromSize
00002c  19c0              ADDS     r0,r0,r7              ;43
00002e  6008              STR      r0,[r1,#0]            ;44  ; g_apromSize
000030  6028              STR      r0,[r5,#0]            ;45
000032  6026              STR      r6,[r4,#0]            ;45
000034  bdf8              POP      {r3-r7,pc}
                  |L2.54|
000036  6808              LDR      r0,[r1,#0]            ;47  ; g_apromSize
000038  460e              MOV      r6,r1                 ;47
00003a  19c0              ADDS     r0,r0,r7              ;47
00003c  6008              STR      r0,[r1,#0]            ;48  ; g_apromSize
00003e  4669              MOV      r1,sp                 ;48
000040  480c              LDR      r0,|L2.116|
000042  f7fffffe          BL       FMC_Read_User
000046  490c              LDR      r1,|L2.120|
000048  9800              LDR      r0,[sp,#0]            ;49
00004a  4008              ANDS     r0,r0,r1              ;49
00004c  9000              STR      r0,[sp,#0]            ;51
00004e  6831              LDR      r1,[r6,#0]            ;51  ; g_apromSize
000050  19ca              ADDS     r2,r1,r7              ;51
000052  4290              CMP      r0,r2                 ;51
000054  d900              BLS      |L2.88|
000056  9100              STR      r1,[sp,#0]            ;52
                  |L2.88|
000058  9800              LDR      r0,[sp,#0]            ;55
00005a  6028              STR      r0,[r5,#0]            ;56
00005c  6830              LDR      r0,[r6,#0]            ;56  ; g_apromSize
00005e  9900              LDR      r1,[sp,#0]            ;56
000060  1a40              SUBS     r0,r0,r1              ;56
000062  6020              STR      r0,[r4,#0]            ;57
000064  6831              LDR      r1,[r6,#0]            ;57  ; g_apromSize
000066  1a08              SUBS     r0,r1,r0              ;57
000068  6030              STR      r0,[r6,#0]            ;57  ; g_apromSize
00006a  bdf8              POP      {r3-r7,pc}
;;;60     
                          ENDP

                  |L2.108|
                          DCD      0x00001000
                  |L2.112|
                          DCD      g_apromSize
                  |L2.116|
                          DCD      0x00300004
                  |L2.120|
                          DCD      0x000ffe00

;*** Start embedded assembler ***

#line 1 "..\\targetdev.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_targetdev_c_11f79a65____REV16|
#line 118 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_targetdev_c_11f79a65____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_targetdev_c_11f79a65____REVSH|
#line 132
|__asm___11_targetdev_c_11f79a65____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
